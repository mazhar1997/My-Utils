{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","backgroundColor","heading","value","onChange","event","console","log","target","rows","toUpperCase","showAlert","toLowerCase","newtext","match","alert1","document","getElementById","innerHTML","setTimeout","newText","select","navigator","clipboard","writeText","split","join","length","trim","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.41932a99.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">About</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"  >Enable DarkMode</label>\r\n                    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };\r\n    \r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n\r\n    const extractEmails= ()=>{\r\n const newtext=text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi) \r\n console.log(newtext)\r\n const alert1 = document.getElementById('maz') \r\n if (newtext==null) {  \r\n    alert1.innerHTML=  `<div class=\"alert alert-danger\" role=\"alert\">\r\n    no email found!\r\n  </div>`\r\n  \r\n    setText(\"no email found please refresh and try again\")\r\n    \r\n}else{\r\n    alert1.innerHTML=  `<div class=\"alert alert-dark\" role=\"alert\">${newtext}</div> `}\r\n\r\n  setTimeout((newText) => {\r\n      if (newText==null) {\r\n\r\n        alert1.innerHTML= \" \"   \r\n      }\r\n      \r\n  }, 3000);\r\n\r\n \r\n}\r\n    // to copy text\r\n    const copyText=()=>{\r\n        var text ;\r\n      text=document.getElementById('myarea')\r\n      text.select()\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text Copied!\", \"success\")\r\n\r\n    }   /* Copy the text inside the text field */\r\n  \r\n     \r\n//$(\"#emails\").text(extractEmails(text).join('\\n'));\r\n    const handleOnClick=()=>{\r\n        console.log()\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLowerCase=()=>{\r\n        console.log()\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"Converted to lowerCase!\", \"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"onchange fired\")\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n    \r\n    const [text, setText] = useState(\"enter your number\");\r\n\r\n    return (\r\n        <>\r\n        \r\n     \r\n\r\n<div className=\"container \" style={{color: props.mode==='dark'?'white':'#042743'}} >\r\n    <div className=\"maz\" id=\"maz\"></div>\r\n    <h1 className=\"my-3\" style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}}>   {props.heading}</h1>\r\n<div className=\"my-5\">\r\n  \r\n  <textarea className=\"form-control\" id=\"myarea\" value={text} onChange={handleOnChange} rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" style={props.style} onClick={handleOnClick}>convert to uppercase</button>\r\n<button className=\"btn btn-primary\" style={props.style} onClick={handleLowerCase}>convert to lowercase</button>\r\n<button className=\"btn btn-primary mbutton mx-2\" style={props.style} onClick={extractEmails}>Extract Emails</button>\r\n<button className=\"btn btn-primary mbutton mx-2\" style={props.style} onClick={copyText}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-1 my-1\" style={props.style}  onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n</div>\r\n{ <div className=\"container my-3\" style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.length>0 ? text.trim().split(\" \").length : 0} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div> }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n    </>        \r\n      \r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nimport { useState } from 'react';\n\nfunction App() {\n  const  [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n      \n    }, 2000);\n  }\n\n  const toggleMode=()=>{\n    console.log(\"clicked\")\n    if (mode===\"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"dark mode enabled\",\"success\")\n      \n    } else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode enabled\",\"success\")\n      \n    }\n  }\n\n\n  return ( \n  // <Router>\n\n   <>\n    <Navbar title=\"My Utils App\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {/* <Switch> */}\n          {/* <Route path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route path=\"/\"> */}\n          <TextForm showAlert={showAlert}   heading=\"please write the Text you want to Analyze :\" style={{backgroundColor : '#8a998c'}} />\n          {/* </Route> */}\n          {/* // <Route path=\"/\"> */}\n          \n         \n          {/* // </Route> */}\n        {/* </Switch> */}\n\n    </>\n    // </Router>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}